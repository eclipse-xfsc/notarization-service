quarkus.application.name=request-processing

quarkus.native.resources.includes:db/migration/*.sql

quarkus.http.access-log.exclude-pattern=\/q\/health\/(live|ready)$
## Notarization Processing
# The internal url of this service
notarization-processing.internal-url=http://localhost:9191

browser-identification.url=http://localhost:9193/session
vc-identification.url=http://localhost:9080

%test.gaia-x.extensions.internal-tasks.upload-documents.names = upload,upload_other,upload_sufficient,upload_combination_of

# %test.quarkus.rest-client.identity-api.url=http://localhost:0
# quarkus.rest-client.identity-api.scope=jakarta.inject.Singleton

quarkus.rest-client.revocation-api.url=http://localhost:9197
%test.quarkus.rest-client.revocation-api.url=http://localhost:9197
%dev.quarkus.rest-client.revocation-api.url=http://localhost:9197
quarkus.rest-client.revocation-api.scope=jakarta.inject.Singleton

quarkus.rest-client.profile-api.url=http://localhost:9196
%test.quarkus.rest-client.profile-api.url=http://localhost:9198
%dev.quarkus.rest-client.profile-api.url=http://localhost:9199

quarkus.rest-client.profile-api.scope=jakarta.inject.Singleton

quarkus.rest-client.dss-api.url=https://dss-demo-webapp.not-api.skidentity-test.de/services/rest
%test.quarkus.rest-client.dss-api.url=https://dss-demo-webapp.not-api.skidentity-test.de/services/rest
%dev.quarkus.rest-client.dss-api.url=http://localhost:8080/services/rest
quarkus.rest-client.dss-api.scope=jakarta.inject.Singleton

%test.notarization-processing.internal-url=http://localhost:${quarkus.http.test-port}

%dev.quarkus.rest-client.ssi-issuance-v1-api.url=http://localhost:9080/

notarization-processing.terminated.session.retention.period=P1Y
notarization-processing.session.timeout.period=P1W
notarization-processing.session.submission.timeout.period=P1D
notarization-processing.http.audit.logs.retention.period=P6Y

# Assign random port by the OS for tests
quarkus.http.test-port = 0

## OpenAPI
mp.openapi.filter=eu.gaiax.notarization.request_processing.infrastructure.rest.openapi.OpenApiCorrection
quarkus.smallrye-openapi.store-schema-directory = deploy/openapi
quarkus.smallrye-openapi.security-scheme = oidc
quarkus.smallrye-openapi.oidc-open-id-connect-url = http://identitymanager.localhost/.well-known/openid-configuration
## OAuth2
# Note: for local token validation, set quarkus.oidc.introspection-path and quarkus.oidc.discovery-enabled=false
# instead of only quarkus.oidc.auth-server-url
quarkus.oidc.application-type=service

%dev.quarkus.oidc.auth-server-url=http://localhost:9080/
%dev.quarkus.oidc.discovery-enabled=false
%dev.quarkus.oidc.introspection-path=http://localhost:9080/
%dev.quarkus.oidc.client-id=notarization-client
%dev.quarkus.oidc.credentials.secret=notarization-api-secret-12345
%test.quarkus.oidc.auth-server-url=http://localhost:12346/
%test.quarkus.oidc.discovery-enabled=false
%test.quarkus.oidc.introspection-path=http://localhost:12346/
%test.quarkus.oidc.client-id=notarization-client
%test.quarkus.oidc.credentials.secret=notarization-api-secret-12345

# This must match the "Token Claim Name" under "Client Scopes" - "roles" - "Mappers" - "realm roles"!
quarkus.oidc.roles.role-claim-path=realm_access/roles


## Messaging
#
#### Supported configuration:
amqp-host=rabbitmq
amqp-port=5672
amqp-username=my-username
amqp-password=my-password
# notarization.amqp.tls.cert-path=./tls/tls.crt
# notarization.amqp.tls.key-path=./tls/tls.key
# notarization.amqp.ca-path=./tlc/ca.crt
cloud-events-default-data-schema=https://gitlab.eclipse.org/eclipse/xfsc/notarization-service/not/documentation/notarization-events.schema.json
notarization.amqp.cloud-event-type-prefix=notarization.
mp.messaging.outgoing.operator-request-changed.connector=smallrye-amqp
mp.messaging.outgoing.operator-request-changed.address=operator-request-changed
mp.messaging.outgoing.operator-request-changed.cloud-events = true
mp.messaging.outgoing.operator-request-changed.cloud-events-source = ${notarization-processing.internal-url}/notary
mp.messaging.outgoing.operator-request-changed.use-anonymous-sender=false
%prod.mp.messaging.outgoing.operator-request-changed.client-options-name=secure-amqp-options

mp.messaging.outgoing.requestor-request-changed.connector=smallrye-amqp
mp.messaging.outgoing.requestor-request-changed.address=requestor-request-changed
mp.messaging.outgoing.requestor-request-changed.cloud-events = true
mp.messaging.outgoing.requestor-request-changed.cloud-events-source = ${notarization-processing.internal-url}/requestor
mp.messaging.outgoing.requestor-request-changed.use-anonymous-sender=false
%prod.mp.messaging.outgoing.requestor-request-changed.client-options-name=secure-amqp-options

#### Messaging Development Services
quarkus.amqqp.devservices.exchanges.operator-request-changed.type=topic
quarkus.amqqp.devservices.exchanges.requestor-request-changed.type=topic

%test.amqqp-username = quarkus-rabbitmq
%test.amqqp-password = quarkus-rabbitmq
%test.amqqp-port = 34520
%test.amqqp-host = localhost
%test.quarkus.amqqp.devservices.enabled = false

## CORS
### Configuration https://quarkus.io/guides/http-reference#cors-filter
quarkus.http.cors=true
quarkus.http.port=8084

quarkus.log.level=INFO
quarkus.log.category."eu.gaiax".level=DEBUG
%prod.quarkus.log.level=WARN

# Container image
quarkus.container-image.builder=jib
quarkus.container-image.registry=node-654e3bca7fbeeed18f81d7c7.ps-xaas.io
quarkus.container-image.group=not
quarkus.container-image.tag=latest-dev
quarkus.container-image.name=${quarkus.application.name}

quarkus.native.additional-build-args=--trace-object-instantiation=jdk.internal.net.http.HttpClientImpl$SelectorManager,--initialize-at-run-time=com.apicatalog.jsonld.loader.SchemeRouter,--initialize-at-run-time=com.apicatalog.jsonld.loader.HttpLoader,--initialize-at-run-time=com.apicatalog.jsonld.http.DefaultHttpClient

# For some reasons, Quarkus does not choose the java-21 runtime image by default
quarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-21-runtime:1.18
quarkus.container-image.labels."org.opencontainers.image.base.name"=${quarkus.jib.base-jvm-image}

## Database
quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=quarkus
#quarkus.datasource.password=quarkus

quarkus.datasource.reactive.max-size=20
quarkus.datasource.reactive.reconnect-attempts=1

quarkus.datasource.devservices.enabled=true

#quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=none
#quarkus.hibernate-orm.unsupported-properties."hibernate.type.json_format_mapper"=org.hibernate.type.format.jackson.JacksonJsonFormatMapper
quarkus.flyway.migrate-at-start=false
quarkus.flyway.locations = db-flyway

%test.quarkus.flyway.migrate-at-start=true
%test.quarkus.flyway.clean-at-start=true

# Path to an optional custom policy file. Class FileToBase64Converter will read
# its content and return the base64 encoded representation.
# Sending custom policies is currently only possible with SD DSS version < 5.10.
# This will be addressed in the future.
# dss.policy.path=/custom-policy.xml

## Kubernetes integration configuration
quarkus.kubernetes.part-of=notarization-system
quarkus.kubernetes.name=request-processing

quarkus.kubernetes.readiness-probe.initial-delay=20s
quarkus.kubernetes.readiness-probe.period=45s

# Tracing with OpenTelemetry.
%prod.quarkus.otel.enabled=true
%prod.quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317

#Caching
%test.quarkus.cache.enabled=false

quarkus.cache.caffeine.initial-capacity=20
quarkus.cache.caffeine.expire-after-write=120

quarkus.index-dependency.jose4j.group-id=org.bitbucket.b_c
quarkus.index-dependency.jose4j.artifact-id=jose4j
