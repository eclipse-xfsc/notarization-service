apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "profile.fullname" . }}
  labels:
    {{- include "profile.labels" . | nindent 4 }}
    {{ include "app.istioLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "profile.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "profile.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "profile.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: profile-configmap
          env:
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.config.datasourceExistingSecret }}"
                  key: "{{ .Values.config.datasourceSecretKey }}"
            - name: QUARKUS_OIDC_CREDENTIALS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.config.oidcExistingSecret }}"
                  key: "{{ .Values.config.oidcSecretKey }}"
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: prepare-migrations
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          command: [ "/bin/sh" ]
          args: [ "-c", "cp /db-flyway/* /sql-migrations" ]
          volumeMounts:
            - name: migrations
              mountPath: /sql-migrations
        - name: migrate-db
          image: flyway/flyway:10.9.1
          imagePullPolicy: Always
          args:
            - repair
            - migrate
          env:
            - name: FLYWAY_LOCATIONS
              value: filesystem:/sql-migrations
            - name: FLYWAY_USER
              valueFrom:
                configMapKeyRef:
                  key: QUARKUS_DATASOURCE_USERNAME
                  name:  profile-configmap
            - name: FLYWAY_URL
              valueFrom:
                configMapKeyRef:
                  key: FLYWAY_JDBC_URL
                  name:  profile-configmap
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.config.datasourceExistingSecret }}"
                  key: "{{ .Values.config.datasourceSecretKey }}"
          volumeMounts:
            - name: migrations
              mountPath: /sql-migrations
      volumes:
        - name: migrations
          emptyDir:
            medium: Memory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
