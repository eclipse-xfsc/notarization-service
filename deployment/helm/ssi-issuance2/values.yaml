---
replicaCount: 2

image:
  repository: node-654e3bca7fbeeed18f81d7c7.ps-xaas.io/not/ssi-issuance2
  pullPolicy: Always
  tag: "dev-598dc95e93aa7d7c1d0b4bf2532bd6f73c15a59d"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8089

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /q/health/live
    port: 8089

readinessProbe:
  httpGet:
    path: /q/health/ready
    port: 8089

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

config:
  datasourceUsername: "not_api"
  datasourceJdbcUrl: "jdbc:postgresql://postgres-postgresql.not-api.svc.cluster.local:5432/test_ssi_issuance2"
  datasourceExistingSecret: "notarization-credentials"
  datasourceSecretKey: "postgresql-not-api-password"
  issuance2ServiceUrl: "http://localhost:8089"
  otelConnectorUrl: "http://otel-collector.not-api.svc.cluster.local:4317"
  restClientRevocationApiUrl: "https://test-not.xfsc.dev/revocation"
  restClientProfileApiUrl: "https://test-not.xfsc.dev/profile/"
  restClientOfferApiUrl: "https://test-not.xfsc.dev/oid4vci"
  restClientAcapyApiUrl: "https://test-not.xfsc.dev/acapy"
